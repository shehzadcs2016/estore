{"ast":null,"code":"// import jwtDecode from 'jwt-decode';\nimport store from '../redux/store';\nimport { Logout } from '../redux/actions/index';\nexport const isAuthenticated = () => {\n  const token = localStorage.getItem(\"jwt\");\n\n  if (token) {\n    // const decodedtoken = jwtDecode(token);\n    // if (decodedtoken.exp * 1000 < Date.now()) {\n    //   store.dispatch(Logout());\n    //   window.location.href = '/SignIn'\n    //   return false;\n    // }\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    store.dispatch({\n      type: 'SET_UNAUTHENTICATED'\n    });\n    return false;\n  }\n};\nexport const SignOut = () => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    store.dispatch({\n      type: 'SET_UNAUTHENTICATED'\n    });\n  }\n\n  ;\n  this.props.history.push(\"/signIn\");\n};","map":{"version":3,"sources":["F:/softwears/node-react/shoppingSite/shopping-front/src/auth/index.js"],"names":["store","Logout","isAuthenticated","token","localStorage","getItem","JSON","parse","dispatch","type","SignOut","window","removeItem","props","history","push"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAAQC,MAAR,QAAqB,wBAArB;AACA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;;AACA,MAAIF,KAAJ,EAAW;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAP;AACD,GARD,MAQO;AACHL,IAAAA,KAAK,CAACQ,QAAN,CAAe;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAf;AACF,WAAO,KAAP;AACD;AACF,CAdM;AAeP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,KAAxB;AACEZ,IAAAA,KAAK,CAACQ,QAAN,CAAe;AAACC,MAAAA,IAAI,EAAC;AAAN,KAAf;AACH;;AAAA;AACD,OAAKI,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB;AAED,CAPM","sourcesContent":["// import jwtDecode from 'jwt-decode';\r\nimport store from '../redux/store';\r\nimport {Logout} from '../redux/actions/index'\r\nexport const isAuthenticated = () => {\r\n  const token = localStorage.getItem(\"jwt\");\r\n  if (token) {\r\n    // const decodedtoken = jwtDecode(token);\r\n    // if (decodedtoken.exp * 1000 < Date.now()) {\r\n    //   store.dispatch(Logout());\r\n    //   window.location.href = '/SignIn'\r\n    //   return false;\r\n    // }\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n      store.dispatch({type:'SET_UNAUTHENTICATED'});\r\n    return false;\r\n  }\r\n};\r\nexport const SignOut = () => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"jwt\");\r\n      store.dispatch({type:'SET_UNAUTHENTICATED'});\r\n  };\r\n  this.props.history.push(\"/signIn\");\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}